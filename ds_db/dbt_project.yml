
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'ds_db'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'ds_db'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  ds_db:
    staging:
      +materialized: view
      +pre-hook: |
        CREATE TABLE IF NOT EXISTS drug_shortages_staging (
            id INTEGER PRIMARY KEY,
            generic_name TEXT,
            company_name TEXT,
            presentation TEXT,
            update_type TEXT,
            update_date DATE,
            availability TEXT,
            related_info TEXT,
            resolved_note TEXT,
            reason_for_shortage TEXT,
            therapeutic_category TEXT,
            status TEXT,
            status_change_date DATE,
            change_date DATE,
            date_discontinued DATE,
            availability_status TEXT,
            ndc TEXT,
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        CREATE INDEX IF NOT EXISTS idx_status ON drug_shortages_staging(status);
        CREATE INDEX IF NOT EXISTS idx_update_date ON drug_shortages_staging(update_date);
        CREATE INDEX IF NOT EXISTS idx_company_name ON drug_shortages_staging(company_name);
        CREATE INDEX IF NOT EXISTS idx_generic_name ON drug_shortages_staging(generic_name);
    marts:
      +materialized: table
